<Application x:Class="BeautySalonVogue.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BeautySalonVogue"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="Windows\AuthWindow.xaml">
    <Application.Resources>
        
        <Style TargetType="{x:Type Window}">
            <Setter Property="FontFamily" Value="Roboto Light"></Setter>
        </Style>
        <Style TargetType="{x:Type Frame}">
            <Setter Property="FontFamily" Value="Roboto Light"></Setter>
        </Style>
        <Style TargetType="Popup" x:Key="baseWindowPopupStyle">
            <Style.Triggers>
                <Trigger Property="IsOpen" Value="true">
                    <Setter Property="VerticalOffset" Value="5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Popup" x:Key="reportsPagePopupStyle">
            <Style.Triggers>
                <Trigger Property="IsOpen" Value="true">
                    <Setter Property="VerticalOffset" Value="-10" />
                    <Setter Property="HorizontalOffset" Value="-10" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Popup" x:Key="searchPopupStyle">
            <Style.Triggers>
                <Trigger Property="IsOpen" Value="true">
                    <Setter Property="VerticalOffset" Value="-3" />
                    <Setter Property="HorizontalOffset" Value="10" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="BorderBrush" Value="#090C08"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Width" Value="175"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="Roboto Light"></Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="xctk:MaskedTextBox">
        <Setter Property="Width" Value="175"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontFamily" Value="Roboto Light"></Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="3"/>
            </Style>
        </Style.Resources>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Width" Value="175"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Width" Value="175"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border CornerRadius="3" BorderThickness="1" BorderBrush="Black" Background="{TemplateBinding Panel.Background}">
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="myCheckBoxStyle">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Image x:Name="checkBoxImage" Source="pack://application:,,,/Resources/MenuImages/eyePressed.png"></Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkBoxImage" Property="Source" Value="pack://application:,,,/Resources/MenuImages/eyePressed.png"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="checkBoxImage" Property="Source" Value="pack://application:,,,/Resources/MenuImages/eyeUnpressed.png"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="checkBoxImage" Property="Source" Value="pack://application:,,,/Resources/MenuImages/eyeHover.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Width" Value="130"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="#60615e"></Setter>
            <Setter Property="Foreground" Value="#FEFFFE"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#bfbfbf"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e0e0e0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="#ebebeb" Margin="5" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ebebeb"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="DatePickerTextBoxStyle">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type DatePickerTextBox}" >
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox x:Name="PART_TextBox" HorizontalContentAlignment="Center"
                             Text="{Binding Path=SelectedDate, StringFormat='dd-MM-yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" Style="{StaticResource DatePickerTextBoxStyle}" >
                        </TextBox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
